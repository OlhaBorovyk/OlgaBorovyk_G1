Основные 3 принципа ООП:
- наследование
- инкапсуляция
- полиморфизм.

-----------------------
Наследование - использование существующих (родительских) классов (base class) для создания 
на их базе новых дочерних (derived class).
Пример: 
class A
{
private int i;

public void MethodBase()
{
Console.WriteLine("Hello! I'm from base class!");
}
}

class B: A
{
public void MethodDerived()
{
Console.WriteLine("Hello! I'm from derived class!");
}
}

В нашем случае у класса B после наследования в функциональность добавлен метод MethodBase() 
из класса А. В любом другом месте программы мы можем создать экземпляр класса В и вызвать 
публичный метод родительского класса как B.MethodBase().

-----------------------
Инкапсуляция - скрытие реализации программного компонента от пользователя и предоставление ему 
для работы с этим компонентом интерфейса, публичных членов. 

Инкапусляция реализуется посредством ключевых слов public, private, protected...

-----------------------
Полиморфизм - способность объектов с одинаковой спецификацией иметь разную функциональность.

Примерами полиморфизма являются переопределение абстрактных методов, перегрузка методов.

